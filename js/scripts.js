/******************************** */
function sumOfMultiples(n) {

    let sum = 0,
        string = '';

    for (let i = 1; i < n; i++) {
        if (i%3 == 0 || i%5 == 0) {
            sum += i;
            string += ' + ' + i;
        }
    }
    let answer = string + " = " + sum;

    const UIElements = [ "sumOfMultiples",
                        "Problem 01",
                        "Multiples of 3 and 5",
                        "If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. <br/>Find the sum of all the multiples of 3 or 5 below 1000.",
                        answer ];
    buildListElement(...UIElements);
}
sumOfMultiples(1000);
/******************************** */
function evenFibonacciNumbers(n) {
    let sum = 0,
        string = '<b>Terms:</b> 1, 2',
        stringOp = '<b>Sum of the even-valued terms:</b> 2';
        a = 1,
        b = 2;


    for( let c = 3; c < n; c = a + b) {
        if (c%2 == 0) {
            sum += c;
            stringOp += ' + ' + c;
        };
        string += ', ' + c;
        a = b;
        b = c;
    }

    let answer = string + " <br/>" + stringOp + ' = ' + sum;

    const UIElements = [ "evenFibonacciNumbers",
    "Problem 02",
    "Even Fibonacci numbers",
    "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:<br/>1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...<br/>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.",
    answer ];
    buildListElement(...UIElements);
}

evenFibonacciNumbers(4000000);
/******************************** */

function largestPrimeFactor(n) { //Sieve of Eratosthenes (решето Аратосфена, находит простые числа до заднной грницы n)
    
    let factors = [];

    //let str1 = '';
    let str2 = '';
        
    //Find all factors:
    for (let i = 0; i < n; i++) {
        if (n%i == 0) { 
            factors.push(i);
            // str1 += ' ' + i;
        }
    }

    //Find the prime numbers in factors[]
    for (let i = factors.length - 1; i >= 0; i--) {
        let factorsI = false;

        
    //console.log(factors[i])
        for (let j = 2; j <= factors[factors.length - 1] && j < factors[i]; j++) {
            
            if (factors[i]%j == 0) {
                factorsI = true;
            }
        }
        if(factorsI == false) {str2 += ' ' + factors[i]; break;}
    }
    answer.html('Largest prime factor of number ' + n + ': ' + str2);
}